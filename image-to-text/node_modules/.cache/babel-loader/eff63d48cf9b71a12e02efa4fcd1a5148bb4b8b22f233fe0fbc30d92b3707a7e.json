{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\OneDrive\\\\Desktop\\\\bill-splitting-and-receipt-archival\\\\image-to-text\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imagePath, setImagePath] = useState(null);\n  const [text, setText] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleChange = event => {\n    setImagePath(URL.createObjectURL(event.target.files[0]));\n  };\n  const handleClick = () => {\n    if (!imagePath) return;\n    setLoading(true);\n    Tesseract.recognize(imagePath, 'eng', {\n      logger: m => console.log(m)\n    }).then(result => {\n      setText(result.data.text);\n    }).catch(err => {\n      console.error(err);\n      setText(\"An error occurred while processing the image.\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Actual imagePath uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePath,\n        className: \"App-image\",\n        alt: \"uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        style: {\n          height: 50\n        },\n        children: \"Convert to Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AjvPMRLf9j1ef1NkoU5jqycbqj0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Tesseract","jsxDEV","_jsxDEV","App","_s","imagePath","setImagePath","text","setText","loading","setLoading","handleChange","event","URL","createObjectURL","target","files","handleClick","recognize","logger","m","console","log","then","result","data","catch","err","error","finally","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","onClick","style","height","_c","$RefreshReg$"],"sources":["C:/Users/adria/OneDrive/Desktop/bill-splitting-and-receipt-archival/image-to-text/src/App.js"],"sourcesContent":["import { useState} from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\n\nfunction App() {\n  const [imagePath, setImagePath] = useState(null);\n  const [text, setText] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const handleChange = (event) => {\n    setImagePath(URL.createObjectURL(event.target.files[0]));\n  };\n\n  const handleClick = () => {\n    if (!imagePath) return;\n\n    setLoading(true);\n    Tesseract.recognize(\n      imagePath, 'eng',\n      { \n        logger: m => console.log(m) \n      }\n    )\n    .then(result => {\n      setText(result.data.text);\n    })\n    .catch(err => {\n      console.error(err);\n      setText(\"An error occurred while processing the image.\");\n    })\n    .finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <main className=\"App-main\">\n        <h3>Actual imagePath uploaded</h3>\n        {imagePath && <img src={imagePath} className=\"App-image\" alt=\"uploaded\" />}\n        \n        <h3>Extracted text</h3>\n        <div className=\"text-box\">\n          {loading ? <p>Loading...</p> : <p>{text}</p>}\n        </div>\n        <input type=\"file\" onChange={handleChange} />\n        <button onClick={handleClick} style={{ height: 50 }}>Convert to Text</button>\n      </main>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}