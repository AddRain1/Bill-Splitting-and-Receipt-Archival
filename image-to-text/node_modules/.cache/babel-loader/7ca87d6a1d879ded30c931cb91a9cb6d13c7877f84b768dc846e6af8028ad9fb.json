{"ast":null,"code":"// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\n// Inspects the runtime environment and exports the relevant sharp.node binary\nconst {\n  familySync,\n  versionSync\n} = require('detect-libc');\nconst {\n  runtimePlatformArch,\n  isUnsupportedNodeRuntime,\n  prebuiltPlatforms,\n  minimumLibvipsVersion\n} = require('./libvips');\nconst runtimePlatform = runtimePlatformArch();\nconst paths = [`../src/build/Release/sharp-${runtimePlatform}.node`, '../src/build/Release/sharp-wasm32.node', `@img/sharp-${runtimePlatform}/sharp.node`, '@img/sharp-wasm32/sharp.node'];\nlet sharp;\nconst errors = [];\nfor (const path of paths) {\n  try {\n    sharp = require(path);\n    break;\n  } catch (err) {\n    /* istanbul ignore next */\n    errors.push(err);\n  }\n}\n\n/* istanbul ignore next */\nif (sharp) {\n  module.exports = sharp;\n} else {\n  const [isLinux, isMacOs, isWindows] = ['linux', 'darwin', 'win32'].map(os => runtimePlatform.startsWith(os));\n  const help = [`Could not load the \"sharp\" module using the ${runtimePlatform} runtime`];\n  errors.forEach(err => {\n    if (err.code !== 'MODULE_NOT_FOUND') {\n      help.push(`${err.code}: ${err.message}`);\n    }\n  });\n  const messages = errors.map(err => err.message).join(' ');\n  help.push('Possible solutions:');\n  // Common error messages\n  if (isUnsupportedNodeRuntime()) {\n    const {\n      found,\n      expected\n    } = isUnsupportedNodeRuntime();\n    help.push('- Please upgrade Node.js:', `    Found ${found}`, `    Requires ${expected}`);\n  } else if (prebuiltPlatforms.includes(runtimePlatform)) {\n    const [os, cpu] = runtimePlatform.split('-');\n    const libc = os.endsWith('musl') ? ' --libc=musl' : '';\n    help.push('- Ensure optional dependencies can be installed:', '    npm install --include=optional sharp', '    yarn add sharp --ignore-engines', '- Ensure your package manager supports multi-platform installation:', '    See https://sharp.pixelplumbing.com/install#cross-platform', '- Add platform-specific dependencies:', `    npm install --os=${os.replace('musl', '')}${libc} --cpu=${cpu} sharp`);\n  } else {\n    help.push(`- Manually install libvips >= ${minimumLibvipsVersion}`, '- Add experimental WebAssembly-based dependencies:', '    npm install --cpu=wasm32 sharp', '    npm install @img/sharp-wasm32');\n  }\n  if (isLinux && /(symbol not found|CXXABI_)/i.test(messages)) {\n    try {\n      const {\n        engines\n      } = require(`@img/sharp-libvips-${runtimePlatform}/package`);\n      const libcFound = `${familySync()} ${versionSync()}`;\n      const libcRequires = `${engines.musl ? 'musl' : 'glibc'} ${engines.musl || engines.glibc}`;\n      help.push('- Update your OS:', `    Found ${libcFound}`, `    Requires ${libcRequires}`);\n    } catch (errEngines) {}\n  }\n  if (isLinux && /\\/snap\\/core[0-9]{2}/.test(messages)) {\n    help.push('- Remove the Node.js Snap, which does not support native modules', '    snap remove node');\n  }\n  if (isMacOs && /Incompatible library version/.test(messages)) {\n    help.push('- Update Homebrew:', '    brew update && brew upgrade vips');\n  }\n  if (errors.some(err => err.code === 'ERR_DLOPEN_DISABLED')) {\n    help.push('- Run Node.js without using the --no-addons flag');\n  }\n  // Link to installation docs\n  if (isWindows && /The specified procedure could not be found/.test(messages)) {\n    help.push('- Using the canvas package on Windows?', '    See https://sharp.pixelplumbing.com/install#canvas-and-windows', '- Check for outdated versions of sharp in the dependency tree:', '    npm ls sharp');\n  }\n  help.push('- Consult the installation documentation:', '    See https://sharp.pixelplumbing.com/install');\n  throw new Error(help.join('\\n'));\n}","map":{"version":3,"names":["familySync","versionSync","require","runtimePlatformArch","isUnsupportedNodeRuntime","prebuiltPlatforms","minimumLibvipsVersion","runtimePlatform","paths","sharp","errors","path","err","push","module","exports","isLinux","isMacOs","isWindows","map","os","startsWith","help","forEach","code","message","messages","join","found","expected","includes","cpu","split","libc","endsWith","replace","test","engines","libcFound","libcRequires","musl","glibc","errEngines","some","Error"],"sources":["C:/Users/adria/OneDrive/Desktop/bill-splitting-and-receipt-archival/image-to-text/node_modules/sharp/lib/sharp.js"],"sourcesContent":["// Copyright 2013 Lovell Fuller and others.\n// SPDX-License-Identifier: Apache-2.0\n\n'use strict';\n\n// Inspects the runtime environment and exports the relevant sharp.node binary\n\nconst { familySync, versionSync } = require('detect-libc');\n\nconst { runtimePlatformArch, isUnsupportedNodeRuntime, prebuiltPlatforms, minimumLibvipsVersion } = require('./libvips');\nconst runtimePlatform = runtimePlatformArch();\n\nconst paths = [\n  `../src/build/Release/sharp-${runtimePlatform}.node`,\n  '../src/build/Release/sharp-wasm32.node',\n  `@img/sharp-${runtimePlatform}/sharp.node`,\n  '@img/sharp-wasm32/sharp.node'\n];\n\nlet sharp;\nconst errors = [];\nfor (const path of paths) {\n  try {\n    sharp = require(path);\n    break;\n  } catch (err) {\n    /* istanbul ignore next */\n    errors.push(err);\n  }\n}\n\n/* istanbul ignore next */\nif (sharp) {\n  module.exports = sharp;\n} else {\n  const [isLinux, isMacOs, isWindows] = ['linux', 'darwin', 'win32'].map(os => runtimePlatform.startsWith(os));\n\n  const help = [`Could not load the \"sharp\" module using the ${runtimePlatform} runtime`];\n  errors.forEach(err => {\n    if (err.code !== 'MODULE_NOT_FOUND') {\n      help.push(`${err.code}: ${err.message}`);\n    }\n  });\n  const messages = errors.map(err => err.message).join(' ');\n  help.push('Possible solutions:');\n  // Common error messages\n  if (isUnsupportedNodeRuntime()) {\n    const { found, expected } = isUnsupportedNodeRuntime();\n    help.push(\n      '- Please upgrade Node.js:',\n      `    Found ${found}`,\n      `    Requires ${expected}`\n    );\n  } else if (prebuiltPlatforms.includes(runtimePlatform)) {\n    const [os, cpu] = runtimePlatform.split('-');\n    const libc = os.endsWith('musl') ? ' --libc=musl' : '';\n    help.push(\n      '- Ensure optional dependencies can be installed:',\n      '    npm install --include=optional sharp',\n      '    yarn add sharp --ignore-engines',\n      '- Ensure your package manager supports multi-platform installation:',\n      '    See https://sharp.pixelplumbing.com/install#cross-platform',\n      '- Add platform-specific dependencies:',\n      `    npm install --os=${os.replace('musl', '')}${libc} --cpu=${cpu} sharp`\n    );\n  } else {\n    help.push(\n      `- Manually install libvips >= ${minimumLibvipsVersion}`,\n      '- Add experimental WebAssembly-based dependencies:',\n      '    npm install --cpu=wasm32 sharp',\n      '    npm install @img/sharp-wasm32'\n    );\n  }\n  if (isLinux && /(symbol not found|CXXABI_)/i.test(messages)) {\n    try {\n      const { engines } = require(`@img/sharp-libvips-${runtimePlatform}/package`);\n      const libcFound = `${familySync()} ${versionSync()}`;\n      const libcRequires = `${engines.musl ? 'musl' : 'glibc'} ${engines.musl || engines.glibc}`;\n      help.push(\n        '- Update your OS:',\n        `    Found ${libcFound}`,\n        `    Requires ${libcRequires}`\n      );\n    } catch (errEngines) {}\n  }\n  if (isLinux && /\\/snap\\/core[0-9]{2}/.test(messages)) {\n    help.push(\n      '- Remove the Node.js Snap, which does not support native modules',\n      '    snap remove node'\n    );\n  }\n  if (isMacOs && /Incompatible library version/.test(messages)) {\n    help.push(\n      '- Update Homebrew:',\n      '    brew update && brew upgrade vips'\n    );\n  }\n  if (errors.some(err => err.code === 'ERR_DLOPEN_DISABLED')) {\n    help.push('- Run Node.js without using the --no-addons flag');\n  }\n  // Link to installation docs\n  if (isWindows && /The specified procedure could not be found/.test(messages)) {\n    help.push(\n      '- Using the canvas package on Windows?',\n      '    See https://sharp.pixelplumbing.com/install#canvas-and-windows',\n      '- Check for outdated versions of sharp in the dependency tree:',\n      '    npm ls sharp'\n    );\n  }\n  help.push(\n    '- Consult the installation documentation:',\n    '    See https://sharp.pixelplumbing.com/install'\n  );\n  throw new Error(help.join('\\n'));\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}