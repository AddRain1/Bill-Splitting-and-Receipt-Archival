{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adria\\\\OneDrive\\\\Desktop\\\\bill-splitting-and-receipt-archival\\\\image-to-text\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Tesseract from 'tesseract.js';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [imagePath, setImagePath] = useState(null);\n  const [text, setText] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [sorted, setSorted] = useState(\"\");\n  const handleChange = event => {\n    setImagePath(URL.createObjectURL(event.target.files[0]));\n  };\n  const handleClick = async () => {\n    if (!imagePath) return;\n    setLoading(true);\n    try {\n      const result = await Tesseract.recognize(imagePath, 'eng', {\n        logger: m => console.log(m),\n        tessedit_char_whitelist: '0123456789.'\n      });\n      const extractedText = result.data.text;\n      setText(extractedText);\n      sortText(extractedText);\n    } catch (error) {\n      console.error(error);\n      setText(\"An error occurred while processing the image.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const sortText = text => {\n    // Split each line\n    const lines = text.split('\\n');\n    const items = [];\n    const specialLines = {\n      tax: null,\n      tip: null,\n      total: null\n    };\n    lines.forEach(line => {\n      const itemMatch = line.match(/(.*)\\s+(\\d+\\.\\d{2})$/);\n      const taxMatch = line.match(/\\b(TAX|SALES TAX)\\b/i);\n      const tipMatch = line.match(/\\b(TIP)\\b/i);\n      const totalMatch = line.match(/\\b(TAX|TOTAL|SUBTOTAL|AMOUNT)\\b/gi);\n      if (itemMatch) {\n        items.push({\n          name: itemMatch[1].trim(),\n          price: parseFloat(itemMatch[2])\n        });\n      } else if (taxMatch) {\n        specialLines.tax = parseFloat(line.match(/\\d+\\.\\d{2}/)[0]);\n      } else if (tipMatch) {\n        specialLines.tip = parseFloat(line.match(/\\d+\\.\\d{2}/)[0]);\n      } else if (totalMatch) {\n        specialLines.total = parseFloat(line.match(/\\d+\\.\\d{2}/)[0]);\n      }\n    });\n    const itemResults = items.map(item => `${item.name}: $${item.price.toFixed(2)}`).join('\\n');\n    const specialResults = `\n      Tax: ${specialLines.tax !== null ? `$${specialLines.tax.toFixed(2)}` : 'Not found'}\n      Tip: ${specialLines.tip !== null ? `$${specialLines.tip.toFixed(2)}` : 'Not found'}\n      Total: ${specialLines.total !== null ? `$${specialLines.total.toFixed(2)}` : 'Not found'}\n    `;\n    setSorted(`${itemResults}\\n\\n${specialResults}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"App-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Actual image uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), imagePath && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imagePath,\n        className: \"App-image\",\n        alt: \"uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Extracted text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-box\",\n        children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", sorted, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        style: {\n          height: 50\n        },\n        children: \"Convert to Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"37nQpqhKPmY9Gp3VzS04oRS8hVA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Tesseract","jsxDEV","_jsxDEV","App","_s","imagePath","setImagePath","text","setText","loading","setLoading","sorted","setSorted","handleChange","event","URL","createObjectURL","target","files","handleClick","result","recognize","logger","m","console","log","tessedit_char_whitelist","extractedText","data","sortText","error","lines","split","items","specialLines","tax","tip","total","forEach","line","itemMatch","match","taxMatch","tipMatch","totalMatch","push","name","trim","price","parseFloat","itemResults","map","item","toFixed","join","specialResults","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","onChange","onClick","style","height","_c","$RefreshReg$"],"sources":["C:/Users/adria/OneDrive/Desktop/bill-splitting-and-receipt-archival/image-to-text/src/App.js"],"sourcesContent":["import { useState} from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [imagePath, setImagePath] = useState(null);\r\n  const [text, setText] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [sorted, setSorted] = useState(\"\");\r\n\r\n  const handleChange = (event) => {\r\n    setImagePath(URL.createObjectURL(event.target.files[0]));\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!imagePath) return;\r\n\r\n    setLoading(true);\r\n  try {\r\n    const result = await Tesseract.recognize( \r\n      imagePath, 'eng',\r\n      { \r\n        logger: m => console.log(m),\r\n        tessedit_char_whitelist: '0123456789.', \r\n      }\r\n    );\r\n\r\n    const extractedText = result.data.text;\r\n    setText(extractedText);\r\n    sortText(extractedText);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setText(\"An error occurred while processing the image.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const sortText = (text) => {\r\n    // Split each line\r\n    const lines = text.split('\\n');\r\n    const items = [];\r\n    const specialLines = { tax: null, tip: null, total: null};\r\n\r\n    lines.forEach(line => {\r\n      const itemMatch = line.match(/(.*)\\s+(\\d+\\.\\d{2})$/);\r\n      const taxMatch = line.match(/\\b(TAX|SALES TAX)\\b/i);\r\n      const tipMatch = line.match(/\\b(TIP)\\b/i);\r\n      const totalMatch = line.match(/\\b(TAX|TOTAL|SUBTOTAL|AMOUNT)\\b/gi);\r\n\r\n      if(itemMatch) {\r\n        items.push({ name: itemMatch[1].trim(), price: parseFloat(itemMatch[2]) });\r\n      }\r\n      else if (taxMatch) {\r\n        specialLines.tax = parseFloat(line.match(/\\d+\\.\\d{2}/)[0]);\r\n      }\r\n      else if (tipMatch) {\r\n        specialLines.tip = parseFloat(line.match(/\\d+\\.\\d{2}/)[0]);\r\n      }\r\n      else if (totalMatch) {\r\n        specialLines.total = parseFloat(line.match(/\\d+\\.\\d{2}/)[0])\r\n      }\r\n    });\r\n\r\n    const itemResults = items.map(item => `${item.name}: $${item.price.toFixed(2)}`).join('\\n');\r\n    const specialResults = `\r\n      Tax: ${specialLines.tax !== null ? `$${specialLines.tax.toFixed(2)}` : 'Not found'}\r\n      Tip: ${specialLines.tip !== null ? `$${specialLines.tip.toFixed(2)}` : 'Not found'}\r\n      Total: ${specialLines.total !== null ? `$${specialLines.total.toFixed(2)}` : 'Not found'}\r\n    `;\r\n\r\n    setSorted(`${itemResults}\\n\\n${specialResults}`);\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <main className=\"App-main\">\r\n        <h3>Actual image uploaded</h3>\r\n        {imagePath && <img src={imagePath} className=\"App-image\" alt=\"uploaded\" />}\r\n        <h3>Extracted text</h3>\r\n        <div className=\"text-box\">\r\n          {loading ? <p>Loading...</p> : <p>{text}</p>}\r\n        </div>\r\n        <div>\r\n          <p> {sorted} </p>\r\n        </div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <button onClick={handleClick} style={{ height: 50 }}>Convert to Text</button>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}